@startuml

skinparam TitleFontSize 20
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor Aqua-CadetBlue
skinparam titleBackgroundColor Aqua-CadetBlue
title Settlement Transfer from \nCentral-Ledger

participant "Central-Ledger" as ext_cl
note over ext_cl
    Central-Ledger maintains
    liquidity balances
end note

box Settlements BC #F9FFF9
    participant "Rest API" as sbc_rest #D5E8D4
    participant "Event Handler" as sbc_event #D5E8D4
    note over sbc_event
        Kafka Topics
        - create Settlement Transfer
        - result of Settlement Transfer create
    end note
    participant "Settlements BC\nApp Logic" as sbc_app_logic #EDC54D
    database "Settlements-Database" as sbc_db #DAE8FC
end box

box Settlements-BC - Ledger Adapter #FFFFF9
    participant "TigerBeetle Cluster" as abbc_grpc #D5E8D4
    database "TigerBeetle Nodes" as abbc_tigerbeetle #DAE8FC
    note over abbc_grpc
        Invoke native TigerBeetle NodeJS
        client from Settlement Ledger Adapter.
    end note
    note over abbc_tigerbeetle
        TigerBeetle enabled
    end note
end box

group 1. Create Settlement Transfer - Central Ledger
autonumber
    ext_cl <--> ext_cl : **Transfer prepare**. \nObtain settlement model and allocation data\nvia Central-Ledger rules engine
    ext_cl <--> ext_cl : **Transfer fulfil**. \nAt this point, the transfer has cleared
    ext_cl -> sbc_event : \n//publishEvent// will all necessary data as\n**//TransferPreparedEvtPayload//**
autonumber
    sbc_app_logic -> sbc_event : Listen for Settlement Transfer event
end

group 2. Settlement - App Logic
    sbc_app_logic <--> sbc_app_logic: Settlement Transfer event triggered\nconverted as **//ITransferDto//**
    sbc_app_logic --> sbc_app_logic : Validate Settlement Transfer data
    sbc_app_logic <--> sbc_db : Fetch & cache settlement config\n**Platform Config BC / Admin API**
    sbc_app_logic <--> sbc_db : **Obtain open batch** based on Settlement Transfer data.\n//Create new batch if no OPEN batch available//
    sbc_app_logic <-> abbc_grpc : Obtain **Settlement accounts** using Participant account
    abbc_grpc <--> abbc_tigerbeetle : Create account, if none exists
    sbc_app_logic <--> sbc_db : Create or fetch **Settlement Batch Account**
    abbc_grpc -> sbc_app_logic : Return **Account** info
    sbc_app_logic -> abbc_grpc: Create Settlement Transfer
    abbc_grpc <-> abbc_tigerbeetle: Create Transfer: update accounts \nto DR payer & CR payee
    abbc_grpc -> sbc_app_logic : Return **Transfer** creation info
    sbc_app_logic <-> sbc_app_logic: Prepare **Transfer/Account** response data
    sbc_app_logic -> sbc_event : Publish **Settlement Transfer** data
end

@enduml
